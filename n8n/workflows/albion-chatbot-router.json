{
  "name": "Albion Chatbot Router",
  "nodes": [
    { "parameters": { "httpMethod": "POST", "path": "webhook", "responseMode": "lastNode", "options": { "rawBody": false } }, "id": "webhookIn", "name": "Webhook In", "type": "n8n-nodes-base.webhook", "typeVersion": 1, "position": [200,300] },
    { "parameters": { "functionCode": "const q=(($json.question)||'').toString().toLowerCase();let intent='recommend';if(/(?:buy|purchase|ซื้อ|หาซื้อ)/.test(q)) intent='buy'; if(/(?:gold|ทอง)/.test(q)) intent='gold';return [{json:{question:q,intent,intent_debug:q}}];" }, "id": "classify", "name": "Classify Intent", "type": "n8n-nodes-base.function", "typeVersion": 1, "position": [460,300] },
    { "parameters": { "functionCode": "const intent = $json.intent;if(intent === 'buy'){return [{json:{...$json, route: 'buy'}}];}else if(intent === 'gold'){return [{json:{...$json, route: 'gold'}}];}else{return [{json:{...$json, route: 'recommend'}}];}" }, "id": "switch", "name": "Route by Intent", "type": "n8n-nodes-base.function", "typeVersion": 1, "position": [700,300] },
    { "parameters": { "url": "https://albion-server:8800/api/gold", "responseFormat": "json", "options": { "rejectUnauthorized": false } }, "id": "fetchGold", "name": "Fetch Gold", "type": "n8n-nodes-base.httpRequest", "typeVersion": 3, "position": [960,180] },
    { "parameters": { "functionCode": "const g=$json;return [{json:{reply:`Current gold price is ${g.currentPrice} silver. 24h change: ${g.change24h ?? 'N/A'}`}}];" }, "id": "formatGold", "name": "Format Gold Reply", "type": "n8n-nodes-base.function", "typeVersion": 1, "position": [1200,180] },
  { "parameters": { "functionCode": "const q=($json.question||'').toString().toLowerCase();const itemMatch=q.match(/t\\d{1,2}_[a-z0-9_]+/);const itemId=itemMatch?itemMatch[0].toUpperCase():'T4_BAG';const cities=['bridgewatch','martlock','thetford','lymhurst','fort sterling','caerleon','black market'];let fromCity='';for(const city of cities){if(q.includes(city)){fromCity=city.charAt(0).toUpperCase()+city.slice(1);break;}}return [{json:{...$json,itemId,fromCity}}];" }, "id": "extractItem", "name": "Extract ItemId", "type": "n8n-nodes-base.function", "typeVersion": 1, "position": [960,420] },
    { "parameters": { "functionCode": "const q=($json.question||'').toString().toLowerCase();const itemMatch=q.match(/t\\d{1,2}_[a-z0-9_]+/);const itemId=itemMatch?itemMatch[0].toUpperCase():'T4_BAG';return [{json:{...$json,itemId}}];" }, "id": "extractItemBuy", "name": "Extract ItemId for Buy", "type": "n8n-nodes-base.function", "typeVersion": 1, "position": [960,540] },
    { "parameters": { "url": "=https://albion-server:8800/api/items/{{$json.itemId}}/recommendations", "responseFormat": "json", "options": { "rejectUnauthorized": false, "queryParametersUi": { "parameter": [ {"name":"from","value":"{{$json.fromCity}}"},{"name":"mode","value":"balanced"},{"name":"strategy","value":"list"},{"name":"scenario","value":"haveStock"},{"name":"qty","value":"100"},{"name":"weight","value":"50"},{"name":"limit","value":"3"} ] } } }, "id": "fetchRecs", "name": "Fetch Recommendations", "type": "n8n-nodes-base.httpRequest", "typeVersion": 3, "position": [1200,420] },
    { "parameters": { "url": "=https://albion-server:8800/api/items/{{$json.itemId}}/markets", "responseFormat": "json", "options": { "rejectUnauthorized": false } }, "id": "fetchMarkets", "name": "Fetch Markets", "type": "n8n-nodes-base.httpRequest", "typeVersion": 3, "position": [1200,540] },
    { "parameters": { "functionCode": "const recs=$json.recommendations||[];if(!recs.length){return [{json:{reply:'No profitable market found right now.'}}];}const lines=recs.map(r=>`City: ${r.city} | Net: ${r.net.toFixed(0)} | Score: ${(r.score*100).toFixed(0)}%`).join('\\n');return [{json:{reply:`Top markets for ${$json.itemId} from ${$json.fromCity}:\\n${lines}`}}];" }, "id": "formatRecs", "name": "Format Rec Reply", "type": "n8n-nodes-base.function", "typeVersion": 1, "position": [1440,420] },
    { "parameters": { "functionCode": "const markets=$json.markets||[];if(!markets.length){return [{json:{reply:'No market data available.'}}];}const validMarkets=markets.filter(m=>m.buyPrice>0).sort((a,b)=>a.buyPrice-b.buyPrice);if(!validMarkets.length){return [{json:{reply:'No buy orders found.'}}];}const top3=validMarkets.slice(0,3);const lines=top3.map(m=>`City: ${m.city} | Buy Price: ${m.buyPrice}`).join('\\n');return [{json:{reply:`Cheapest places to buy ${$json.itemId}:\\n${lines}`}}];" }, "id": "formatBuy", "name": "Format Buy Reply", "type": "n8n-nodes-base.function", "typeVersion": 1, "position": [1440,540] },
    { "parameters": { "respondWith": "json", "options": {}, "responseBody": "={{$json.reply}}" }, "id": "webhookResponse", "name": "Webhook Response", "type": "n8n-nodes-base.respondToWebhook", "typeVersion": 1, "position": [1680,300] }
  ],
  "connections": {
    "Webhook In": { "main": [[ { "node": "Classify Intent", "type": "main", "index": 0 } ]] },
    "Classify Intent": { "main": [[ { "node": "Route by Intent", "type": "main", "index": 0 } ]] },
    "Route by Intent": { "main": [[ { "node": "Extract ItemId", "type": "main", "index": 0 } ]] },
    "Fetch Gold": { "main": [[ { "node": "Format Gold Reply", "type": "main", "index": 0 } ]] },
    "Format Gold Reply": { "main": [[ { "node": "Webhook Response", "type": "main", "index": 0 } ]] },
    "Extract ItemId": { "main": [[ { "node": "Fetch Recommendations", "type": "main", "index": 0 } ]] },
    "Fetch Recommendations": { "main": [[ { "node": "Format Rec Reply", "type": "main", "index": 0 } ]] },
    "Format Rec Reply": { "main": [[ { "node": "Webhook Response", "type": "main", "index": 0 } ]] },
    "Extract ItemId for Buy": { "main": [[ { "node": "Fetch Markets", "type": "main", "index": 0 } ]] },
    "Fetch Markets": { "main": [[ { "node": "Format Buy Reply", "type": "main", "index": 0 } ]] },
    "Format Buy Reply": { "main": [[ { "node": "Webhook Response", "type": "main", "index": 0 } ]] }
  },
  "settings": { "executionOrder": "v1" },
  "pinData": {},  
  "versionId": "albion-chatbot-router-v5"
}
