services:
  mongo:
    image: mongo:7
    restart: unless-stopped
    container_name: albion-mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - albion_net

  albion-server:
    build:
      context: ./server
      dockerfile: Dockerfile
    # If no Dockerfile yet, we will switch to image: oven/bun:latest and run commands
    image: albion-server:dev
    container_name: albion-server
    environment:
      # Replace with your Atlas connection or local mongo connection string
      MONGODB_URI: mongodb://root:rootpassword@mongo:27017/albion_dev?authSource=admin
      NODE_ENV: development
      PORT: 8800
      N8N_WEBHOOK_TOKEN: ${N8N_WEBHOOK_TOKEN:-change-me}
      ENABLE_TLS: 'true'
    depends_on:
      - mongo
    ports:
      - "8800:8800"
    networks:
      - albion_net
    command: ["bun", "run", "src/index.ts"]
    # Prevent gigantic or corrupt log files (mitigates json.log I/O errors)
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      # Dynamic protocol healthcheck: uses https if ENABLE_TLS=true else http
      test:
        - CMD
        - bun
        - -e
        - >
          const proto = process.env.ENABLE_TLS==='true' ? 'https' : 'http';
          const port = process.env.PORT || 8800;
          fetch(`${proto}://localhost:${port}/health/database`)
            .then(r=>r.ok?process.exit(0):process.exit(1))
            .catch(()=>process.exit(1));
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 10s

  n8n-postgres:
    image: postgres:15
    restart: unless-stopped
    container_name: n8n-postgres
    environment:
      POSTGRES_USER: n8n
      POSTGRES_PASSWORD: n8npassword
      POSTGRES_DB: n8n
    volumes:
      - n8n_db:/var/lib/postgresql/data
    networks:
      - albion_net

  n8n:
    image: n8nio/n8n:latest
    restart: unless-stopped
    container_name: n8n
    depends_on:
      n8n-postgres:
        condition: service_started
      albion-server:
        condition: service_healthy
    environment:
      DB_TYPE: postgres
      DB_POSTGRESDB_HOST: n8n-postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: n8n
      DB_POSTGRESDB_USER: n8n
      DB_POSTGRESDB_PASSWORD: n8npassword
      N8N_BASIC_AUTH_ACTIVE: 'true'
      N8N_BASIC_AUTH_USER: admin
      N8N_BASIC_AUTH_PASSWORD: admin123
      N8N_HOST: n8n
      N8N_PORT: 5678
      N8N_PROTOCOL: http
      WEBHOOK_URL: http://localhost:5678/
      GENERIC_TIMEZONE: Asia/Bangkok
      # Use http here because albion-server defaults to TLS disabled (ENABLE_TLS=false). If you enable TLS, change to https.
      API_BASE_URL: "https://albion-server:8800"
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n/workflows:/home/node/workflows:ro
    networks:
      - albion_net

networks:
  albion_net:
    driver: bridge

volumes:
  mongo_data:
  n8n_db:
  n8n_data:
