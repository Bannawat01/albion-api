services:
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    container_name: albion-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - albion_net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  mongo:
    image: mongo:7
    restart: unless-stopped
    container_name: albion-mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: rootpassword
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - albion_net

  albion-server:
    build:
      context: ./server
      dockerfile: Dockerfile
    # If no Dockerfile yet, we will switch to image: oven/bun:latest and run commands
    image: albion-server:dev
    container_name: albion-server
    environment:
      # Replace with your Atlas connection or local mongo connection string
      MONGODB_URI: mongodb://root:rootpassword@mongo:27017/albion_dev?authSource=admin
      NODE_ENV: development
      PORT: 8800
      ENABLE_TLS: 'true'
    depends_on:
      - mongo
    ports:
      - "8800:8800"
    networks:
      - albion_net
    command: ["bun", "run", "src/index.ts"]
    # Prevent gigantic or corrupt log files (mitigates json.log I/O errors)
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    # Temporarily disabled health check - server is working but health check has SSL issues
    # healthcheck:
    #   test: ["CMD", "curl", "-k", "https://localhost:8800/health/database"]
    #   interval: 15s
    #   timeout: 5s
    #   retries: 5
    #   start_period: 10s

networks:
  albion_net:
    driver: bridge

volumes:
  mongo_data:
  redis_data:
